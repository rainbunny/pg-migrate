"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPoolConfig = void 0;

var _getValue = require("./get-value");

const getPoolConfig = params => {
  const poolConfig = {
    host: (0, _getValue.getValue)(params.host, process.env.POSTGRES_HOST),
    database: (0, _getValue.getValue)(params.database, process.env.POSTGRES_DATABASE),
    port: +(0, _getValue.getValue)(params.database, process.env.POSTGRES_PORT),
    user: (0, _getValue.getValue)(params.user, process.env.POSTGRES_USER),
    password: (0, _getValue.getValue)(params.password, process.env.POSTGRES_PASSWORD),
    ssl: Boolean((0, _getValue.getValue)(params.host, process.env.POSTGRES_SSL)),
    connectionString: (0, _getValue.getValue)(params.connectionString, process.env.POSTGRES_CONNECTION_STRING)
  };

  if (!poolConfig.connectionString) {
    if (!poolConfig.host) {
      throw new Error('Host is required!');
    }

    if (!poolConfig.database) {
      throw new Error('Database is required!');
    }

    if (!poolConfig.user) {
      throw new Error('User is required!');
    }

    if (!poolConfig.password) {
      throw new Error('Password is required!');
    }
  }

  return poolConfig;
};

exports.getPoolConfig = getPoolConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9nZXQtcG9vbC1jb25maWcudHMiXSwibmFtZXMiOlsiZ2V0UG9vbENvbmZpZyIsInBhcmFtcyIsInBvb2xDb25maWciLCJob3N0IiwicHJvY2VzcyIsImVudiIsIlBPU1RHUkVTX0hPU1QiLCJkYXRhYmFzZSIsIlBPU1RHUkVTX0RBVEFCQVNFIiwicG9ydCIsIlBPU1RHUkVTX1BPUlQiLCJ1c2VyIiwiUE9TVEdSRVNfVVNFUiIsInBhc3N3b3JkIiwiUE9TVEdSRVNfUEFTU1dPUkQiLCJzc2wiLCJCb29sZWFuIiwiUE9TVEdSRVNfU1NMIiwiY29ubmVjdGlvblN0cmluZyIsIlBPU1RHUkVTX0NPTk5FQ1RJT05fU1RSSU5HIiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFFTyxNQUFNQSxhQUFhLEdBQUlDLE1BQUQsSUFBc0U7QUFDakcsUUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxJQUFBQSxJQUFJLEVBQUUsd0JBQVNGLE1BQU0sQ0FBQ0UsSUFBaEIsRUFBc0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxhQUFsQyxDQURXO0FBRWpCQyxJQUFBQSxRQUFRLEVBQUUsd0JBQVNOLE1BQU0sQ0FBQ00sUUFBaEIsRUFBMEJILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxpQkFBdEMsQ0FGTztBQUdqQkMsSUFBQUEsSUFBSSxFQUFFLENBQUMsd0JBQVNSLE1BQU0sQ0FBQ00sUUFBaEIsRUFBMEJILE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxhQUF0QyxDQUhVO0FBSWpCQyxJQUFBQSxJQUFJLEVBQUUsd0JBQVNWLE1BQU0sQ0FBQ1UsSUFBaEIsRUFBc0JQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxhQUFsQyxDQUpXO0FBS2pCQyxJQUFBQSxRQUFRLEVBQUUsd0JBQVNaLE1BQU0sQ0FBQ1ksUUFBaEIsRUFBMEJULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUyxpQkFBdEMsQ0FMTztBQU1qQkMsSUFBQUEsR0FBRyxFQUFFQyxPQUFPLENBQUMsd0JBQVNmLE1BQU0sQ0FBQ0UsSUFBaEIsRUFBc0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWSxZQUFsQyxDQUFELENBTks7QUFPakJDLElBQUFBLGdCQUFnQixFQUFFLHdCQUFTakIsTUFBTSxDQUFDaUIsZ0JBQWhCLEVBQWtDZCxPQUFPLENBQUNDLEdBQVIsQ0FBWWMsMEJBQTlDO0FBUEQsR0FBbkI7O0FBU0EsTUFBSSxDQUFDakIsVUFBVSxDQUFDZ0IsZ0JBQWhCLEVBQWtDO0FBQ2hDLFFBQUksQ0FBQ2hCLFVBQVUsQ0FBQ0MsSUFBaEIsRUFBc0I7QUFDcEIsWUFBTSxJQUFJaUIsS0FBSixDQUFVLG1CQUFWLENBQU47QUFDRDs7QUFFRCxRQUFJLENBQUNsQixVQUFVLENBQUNLLFFBQWhCLEVBQTBCO0FBQ3hCLFlBQU0sSUFBSWEsS0FBSixDQUFVLHVCQUFWLENBQU47QUFDRDs7QUFFRCxRQUFJLENBQUNsQixVQUFVLENBQUNTLElBQWhCLEVBQXNCO0FBQ3BCLFlBQU0sSUFBSVMsS0FBSixDQUFVLG1CQUFWLENBQU47QUFDRDs7QUFFRCxRQUFJLENBQUNsQixVQUFVLENBQUNXLFFBQWhCLEVBQTBCO0FBQ3hCLFlBQU0sSUFBSU8sS0FBSixDQUFVLHVCQUFWLENBQU47QUFDRDtBQUNGOztBQUNELFNBQU9sQixVQUFQO0FBQ0QsQ0E1Qk0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7RXh0ZW5kZWRQb29sQ29uZmlnfSBmcm9tICdAcmFpbmJ1bm55L3BnLWV4dGVuc2lvbnMnO1xuaW1wb3J0IHtnZXRWYWx1ZX0gZnJvbSAnLi9nZXQtdmFsdWUnO1xuXG5leHBvcnQgY29uc3QgZ2V0UG9vbENvbmZpZyA9IChwYXJhbXM6IHtbbmFtZTogc3RyaW5nXTogc3RyaW5nfSk6IEV4dGVuZGVkUG9vbENvbmZpZyB8IHVuZGVmaW5lZCA9PiB7XG4gIGNvbnN0IHBvb2xDb25maWcgPSB7XG4gICAgaG9zdDogZ2V0VmFsdWUocGFyYW1zLmhvc3QsIHByb2Nlc3MuZW52LlBPU1RHUkVTX0hPU1QpLFxuICAgIGRhdGFiYXNlOiBnZXRWYWx1ZShwYXJhbXMuZGF0YWJhc2UsIHByb2Nlc3MuZW52LlBPU1RHUkVTX0RBVEFCQVNFKSxcbiAgICBwb3J0OiArZ2V0VmFsdWUocGFyYW1zLmRhdGFiYXNlLCBwcm9jZXNzLmVudi5QT1NUR1JFU19QT1JUKSxcbiAgICB1c2VyOiBnZXRWYWx1ZShwYXJhbXMudXNlciwgcHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUiksXG4gICAgcGFzc3dvcmQ6IGdldFZhbHVlKHBhcmFtcy5wYXNzd29yZCwgcHJvY2Vzcy5lbnYuUE9TVEdSRVNfUEFTU1dPUkQpLFxuICAgIHNzbDogQm9vbGVhbihnZXRWYWx1ZShwYXJhbXMuaG9zdCwgcHJvY2Vzcy5lbnYuUE9TVEdSRVNfU1NMKSksXG4gICAgY29ubmVjdGlvblN0cmluZzogZ2V0VmFsdWUocGFyYW1zLmNvbm5lY3Rpb25TdHJpbmcsIHByb2Nlc3MuZW52LlBPU1RHUkVTX0NPTk5FQ1RJT05fU1RSSU5HKSxcbiAgfTtcbiAgaWYgKCFwb29sQ29uZmlnLmNvbm5lY3Rpb25TdHJpbmcpIHtcbiAgICBpZiAoIXBvb2xDb25maWcuaG9zdCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdIb3N0IGlzIHJlcXVpcmVkIScpO1xuICAgIH1cblxuICAgIGlmICghcG9vbENvbmZpZy5kYXRhYmFzZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBpcyByZXF1aXJlZCEnKTtcbiAgICB9XG5cbiAgICBpZiAoIXBvb2xDb25maWcudXNlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIGlzIHJlcXVpcmVkIScpO1xuICAgIH1cblxuICAgIGlmICghcG9vbENvbmZpZy5wYXNzd29yZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdQYXNzd29yZCBpcyByZXF1aXJlZCEnKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHBvb2xDb25maWc7XG59O1xuIl19